import { promises as fs } from 'fs';
import { GetServerSideProps, GetStaticProps, InferGetServerSidePropsType } from 'next';
import Head from 'next/head';
import path from 'path';
import ProjectCard from '../../components/ProjectCard';

// export const getServerSideProps: GetServerSideProps<{ projects: Object }> = async () => {
//     const res = await fetch('https://vitrine-projects-ehb.vercel.app/api/projects');
//     const data = await res.json();
//     return { props: { projects: data } };
// };

interface Projects {
    projects: Array<Project>;
}

interface Project {
    id: number;
    description: String;
    title: String;
    links: Array<String>;
    cluster: String;
    tags: Array<String>;
    videoFile: String;
    imageFiles: string[];
    likeCount: number;
    username: String;
    createdAt: Date;
    updatedAt: Date;
}

interface Date {
    seconds: number;
    nanoseconds: number;
}

export const getStaticProps: GetStaticProps = async () => {
    const filePath = path.join(process.cwd(), '/data/projects.json');
    const jsonData = await fs.readFile(filePath, 'utf-8');
    const projects: Projects = JSON.parse(jsonData);

    return { props: { projects } };
};

export default function ProjectsList({ projects }) {
    return (
        <>
            <Head>
                <title>Final Show - Projects</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="flex flex-wrap">
                {projects.map((project: Project, index: number) => {
                    return <ProjectCard key={index} project={project} />;
                })}
            </div>
        </>
    );
}
