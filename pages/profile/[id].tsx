import Head from 'next/head';
import { useRouter } from 'next/router';
import UnderConstruction from '../../components/UnderConstruction';
import { CardGroup } from 'react-bootstrap';
import Card  from '../../components/ProjectCard';
import { useState } from 'react';

export default function EditProfile() {
const project =  {
  "id": 0,
  "title": "Next.js Website Development",
  "description": "Learn how to build dynamic websites using Next.js",
  "links": ["https://example.com/tutorial1", "https://example.com/tutorial2"],
  "cluster": "Web & App",
  "tags": ["React", "Frontend", "TypeScript"],
  "videoFile": "",
  "imageFiles": [
      "https://w7.pngwing.com/pngs/408/212/png-transparent-project-management-body-of-knowledge-project-management-professional-project-manager-management-project-miscellaneous-text-logo-thumbnail.png"
  ],
  "likeCount": 10,
  "user_id": 1
}
    const router = useRouter();
    const { id } = router.query;
    const likes = 42;
    const author = "John Doe";
    const title = "Amazing Artwork";
    const tags = ["Art", "Design", "Creativity"];
    const img = "https://via.placeholder.com/300";
   const pfp="https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?cs=srgb&dl=pexels-pixabay-220453.jpg&fm=jpg"
   const [showMore, setShowMore] = useState(false);

   const toggleShowMore = () => {
     setShowMore(!showMore);
   };
   const [expanded, setExpanded] = useState(false);

   const toggleExpand = () => {
     setExpanded(!expanded);
   };

   return (
        <>
            <Head>
                <title>Final Show - Profile {id}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

<div className="bg-gray-900 text-white" style={{ backgroundImage: 'url(https://images.unsplash.com/photo-1511447333015-45b65e60f6d5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1255&q=80)', backgroundSize: 'cover', backgroundPosition: 'center' }}>
  {/* Image from Unsplash */}
  <div className=" grid max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8 container md:flex-row items-center justify-between">
    <div className="flex items-center">
      <img className="h-11 mr-2" src={pfp} alt="Pfp" />
        {/* Image from Pexels */}
      <div>
        <h1 className="text-2xl font-bold">{author}</h1>
        <span className="text-sm">2022-2023</span>
      </div>
    </div>   
  </div>
  <div className="flex flex-col md:flex-row max-w-7xl mx-auto py-2 px-4 sm:px-6 lg:px-8 container items-center justify-between">
  <div className="flex flex-wrap justify-center md:justify-start gap-x-2">
  <button
      type="button"
      data-te-ripple-init
      data-te-ripple-color="light"
      className="mb-2 inline-block rounded px-6 py-2.5 text-xs font-medium uppercase leading-normal text-white shadow-md transition duration-150 ease-in-out hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg"
      style={{ backgroundColor: '#c13584' }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="h-4 w-4"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"
        />
      </svg>
    </button>
    <button
      type="button"
      data-te-ripple-init
      data-te-ripple-color="light"
      className="mb-2 inline-block rounded px-6 py-2.5 text-xs font-medium uppercase leading-normal text-white shadow-md transition duration-150 ease-in-out hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg"
      style={{ backgroundColor: '#0077b5' }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="h-4 w-4"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"
        />
      </svg>
    </button>
    <button
      type="button"
      data-te-ripple-init
      data-te-ripple-color="light"
      className="mb-2 inline-block rounded px-6 py-2.5 text-xs font-medium uppercase leading-normal text-white shadow-md transition duration-150 ease-in-out hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg"
      style={{ backgroundColor: '#333' }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="h-4 w-4"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
        />
      </svg>
    </button>
  </div>
  <div className="flex flex-wrap justify-center md:justify-end">
  <a href="https://example.com" target="_blank" rel="noopener noreferrer" className="mr-4 mb-2">
    <img src="https://cdn-icons-png.flaticon.com/512/429/429088.png?w=740&t=st=1686247100~exp=1686247700~hmac=bf1e0b57dd6a64d69be0bf9ed93781dd72ff1114145ff61b88f58c498decbb4f" alt="Award 1" className="w-16 h-16 rounded-full" />
 {/*Image from Freepik*/}
 </a>
</div>
</div> 
</div>
    <main className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
    <div className="about-me">
  <h1 className="py-6 text-3xl font-bold mb-4 text-gray-800 flex items-center">
    About Me
  </h1>
  <p className={`initial-text h-10 overflow-hidden ${expanded ? 'h-auto' : ''}`}>
    A long description is a way to provide long alternative text for non-text elements, such as images. Generally, alternative text exceeding 250 characters, which cannot be made more concise without making it less descriptive or meaningful, should have a long description. Examples of suitable use of long descriptions are charts, graphs, maps, infographics, and other complex images.

    As with alternative text, long descriptions should be descriptive and meaningful. It should also include all text that is incorporated into the image. A long description should provide visually impaired users with as much information as sighted users would understand from the image.
  </p>
  {expanded && (
    <aside
      className="h-5 bg-white opacity-40 mt-0px"
    />
  )}
  {!expanded && (
    <div
      className="h-5 bg-white opacity-80 mt-[-14px]"
    />
  )}
  <div className="flex justify-center" onClick={toggleExpand}>
    <button className="underline">
      {expanded ? 'Read less' : 'Read more'}
    </button>
  </div>
</div>
<div>
<h1 className="py-6 text-3xl font-bold mb-4 text-gray-800 flex items-center">
    Final work
    <a href="../projects/upload" className="ml-2">
      <svg className="w-6 h-6 text-gray-500 hover:text-gray-800" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2C11.4477 2 11 2.44772 11 3V11H3C2.44772 11 2 11.4477 2 12C2 12.5523 2.44772 13 3 13H11V21C11 21.5523 11.4477 22 12 22C12.5523 22 13 21.5523 13 21V13H21C21.5523 13 22 12.5523 22 12C22 11.4477 21.5523 11 21 11H13V3C13 2.44772 12.5523 2 12 2Z" fill="currentColor"/>
      </svg>
    </a>
  </h1>
<div className="w-full rounded overflow-hidden shadow-lg bg-white relative">
  
      <div className="h-48 w-full overflow-hidden">
        <img className="w-full h-full object-cover" src={img} alt="Banner" />
      </div>
      <span className="absolute top-0 right-0 m-2 bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700">
        {likes} Likes
      </span>
      <div className="px-6 py-4">
        <div className="mt-4">
          <p className="text-gray-700 font-bold text-xl">{author}</p>
          <p className="text-gray-600 text-lg">{title}</p>
        </div>
        <hr className="my-4" />
        <h3 className="text-lg font-medium text-gray-800">Tags</h3>
        <div className="flex flex-wrap mt-2">
          {tags.map((tag) => (
            <span
              key={tag}
              className="mr-2 mb-2 px-2 py-1 bg-indigo-100 text-indigo-800 rounded-full text-sm"
            >
              {tag}
            </span>
          ))}
        </div>
      </div>
    </div>
</div>





<div>
  <h1 className="py-6 text-3xl font-bold mb-4 text-gray-800">Other</h1>
  <Card project={project}/> 
</div>

</main>
        </>
    );
}
